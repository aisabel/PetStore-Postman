{
	"info": {
		"_postman_id": "0540067b-0e8c-430a-ae2b-128f75dd2a03",
		"name": "SwaggerPetStore",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "11143499"
	},
	"item": [
		{
			"name": "Pet",
			"item": [
				{
					"name": "1. Add a new pet",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var petID = pm.variables.replaceIn(\"{{$randomInt}}\");\r",
									"pm.collectionVariables.set(\"petID\", petID);\r",
									"\r",
									"var petName = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
									"pm.collectionVariables.set(\"petName\", petName);\r",
									"\r",
									"pm.collectionVariables.set(\"petCategory\", \"Labrador\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\":\"{{petID}}\",\r\n  \"category\": {\r\n    \"id\": 0,\r\n    \"name\": \"{{petCategory}}\"\r\n  },\r\n  \"name\": \"{{petName}}\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": \"{{petID}}\",\r\n      \"name\": \"Cute-lab\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/pet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "2. Find created pet by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonObject = JSON.parse(responseBody);\r",
									"\r",
									"var petID = pm.collectionVariables.get(\"petID\");\r",
									"var petName = pm.collectionVariables.get(\"petName\");\r",
									"\r",
									"tests[\"Pet name found = \" + petName] = jsonObject.name === petName;\r",
									"tests[\"PetID = \" + petID] = jsonObject.id == petID;\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/pet/{{petID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"{{petID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "3. Update existing pet with new name",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var petID = pm.collectionVariables.get(\"petID\");\r",
									"var petCategory = pm.collectionVariables.get(\"petCategory\");\r",
									"\r",
									"var petNewName = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
									"pm.collectionVariables.set(\"petNewName\", petNewName);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonObject = JSON.parse(responseBody);\r",
									"\r",
									"var petID = pm.collectionVariables.get(\"petID\");\r",
									"var petNewName = pm.collectionVariables.get(\"petNewName\");\r",
									"\r",
									"tests[\"Pet new name = \" + petNewName] = jsonObject.name === petNewName;\r",
									"tests[\"PetID = \" + petID] = jsonObject.id == petID;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\":\"{{petID}}\",\r\n  \"category\": {\r\n    \"id\": 0,\r\n    \"name\": \"{{petCategory}}\"\r\n  },\r\n  \"name\": \"{{petNewName}}\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": \"{{petID}}\",\r\n      \"name\": \"Cute-lab\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/pet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "4. Find all pets with available status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pet/findByStatus?status=available&status=available",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"findByStatus"
							],
							"query": [
								{
									"key": "status",
									"value": "available",
									"description": "(Required) Status values that need to be considered for filter"
								},
								{
									"key": "status",
									"value": "available"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "5. Update existing pet with status pending using form data",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var petID = pm.collectionVariables.get(\"petID\");\r",
									"var petCategory = pm.collectionVariables.get(\"petCategory\");\r",
									"\r",
									"var unknownpetNewName = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
									"pm.collectionVariables.set(\"unknownpetNewName\", unknownpetNewName);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "status",
									"value": "pending",
									"description": "pending",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/pet/{{petID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"{{petID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "6. Find pet by ID with updated name and status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonObject = JSON.parse(responseBody);\r",
									"\r",
									"var petID = pm.collectionVariables.get(\"petID\");\r",
									"var petNewName = pm.collectionVariables.get(\"petNewName\");\r",
									"\r",
									"tests[\"PetID = \" + petID] = jsonObject.id == petID;\r",
									"tests[\"Pet name updated = \" + petNewName] = jsonObject.name === petNewName;\r",
									"tests[\"Pet status = pending\" ] = jsonObject.status == \"pending\";\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/pet/{{petID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"{{petID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "7. Delete created pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var petID = pm.collectionVariables.get(\"petID\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/pet/{{petID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"{{petID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Store Orders",
			"item": [
				{
					"name": "1. Current Store inventory",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonObject = JSON.parse(responseBody);\r",
									"\r",
									"tests[\"Pending orders = \" + jsonObject.pending ] = jsonObject.pending \r",
									"tests[\"Available orders = \" + jsonObject.available] = jsonObject.available\r",
									"\r",
									"var currenAvailableOrders =jsonObject.available;\r",
									"pm.collectionVariables.set(\"currenAvailableOrders\", currenAvailableOrders);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/store/inventory",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"store",
								"inventory"
							]
						}
					},
					"response": []
				},
				{
					"name": "2. Add a new pet for orders",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var petID = pm.variables.replaceIn(\"{{$randomInt}}\");\r",
									"pm.collectionVariables.set(\"petID\", petID);\r",
									"\r",
									"var petName = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
									"pm.collectionVariables.set(\"petName\", petName);\r",
									"\r",
									"pm.collectionVariables.set(\"petCategory\", \"Labrador\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\":\"{{petID}}\",\r\n  \"category\": {\r\n    \"id\": 0,\r\n    \"name\": \"{{petCategory}}\"\r\n  },\r\n  \"name\": \"{{petName}}\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": \"{{petID}}\",\r\n      \"name\": \"Cute-lab\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/pet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "3. Place an order for an existing pet",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var orderID = pm.variables.replaceIn(\"{{$randomInt}}\");\r",
									"pm.collectionVariables.set(\"orderID\", orderID);\r",
									"\r",
									"var petID = pm.collectionVariables.get(\"petID\");\r",
									"var quantityNumber = pm.variables.replaceIn(\"{{$randomInt}}\");\r",
									"pm.collectionVariables.set(\"quantityNumber\", quantityNumber);\r",
									"/*var shipDateInFuture = pm.variables.replaceIn(\"{{$randomDateFuture}}\");\r",
									"pm.collectionVariables.set(\"shipDateInFuture\", shipDateInFuture);*/"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"{{orderID}}\",\r\n    \"petId\": \"{{petID}}\",\r\n    \"quantity\": \"{{quantityNumber}}\",\r\n    \"shipDate\": \"2022-07-18T09:30:31.775Z\",\r\n    \"status\": \"delivered\",\r\n    \"complete\": true\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/store/order",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"store",
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "4. Find purchase order by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonObject = JSON.parse(responseBody);\r",
									"\r",
									"var petID = pm.collectionVariables.get(\"petID\");\r",
									"var orderID = pm.collectionVariables.get(\"orderID\");\r",
									"var quantityNumber = pm.collectionVariables.get(\"quantityNumber\");\r",
									"\r",
									"tests[\"PetID = \" + petID] = jsonObject.petId == petID;\r",
									"tests[\"orderID = \" + orderID] = jsonObject.id == orderID;\r",
									"tests[\"Quantity = \" + quantityNumber] = jsonObject.quantity == quantityNumber;\r",
									"tests[\"ShipDate = 2022-07-18T09:30:31.775+0000\" ] = jsonObject.shipDate == \"2022-07-18T09:30:31.775+0000\";\r",
									"tests[\"Status = delivered\"] = jsonObject.status === \"delivered\";\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/store/order/{{orderID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"store",
								"order",
								"{{orderID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "5. Add order to inventory",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonObject = JSON.parse(responseBody);\r",
									"var currenAvailableOrders = pm.collectionVariables.get(\"currenAvailableOrders\");\r",
									"var currentOrders=currenAvailableOrders+1;\r",
									"\r",
									"tests[\"Available orders = \" +currentOrders] = jsonObject.available"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/store/inventory",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"store",
								"inventory"
							]
						}
					},
					"response": []
				},
				{
					"name": "6. Delete purchase order by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var orderID = pm.collectionVariables.get(\"orderID\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/store/order/{{orderID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"store",
								"order",
								"{{orderID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "1. Create user",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var userID = pm.variables.replaceIn(\"{{$randomInt}}\");\r",
									"pm.collectionVariables.set(\"userID\", userID);\r",
									"\r",
									"var userName = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
									"pm.collectionVariables.set(\"userName\", userName);\r",
									"\r",
									"var userLastName = pm.variables.replaceIn(\"{{$randomLastName}}\");\r",
									"pm.collectionVariables.set(\"userLastName\", userLastName);\r",
									"\r",
									"var userEmail = pm.variables.replaceIn(\"{{$randomEmail}}\");\r",
									"pm.collectionVariables.set(\"userEmail\", userEmail);\r",
									"\r",
									"var userPassword = pm.variables.replaceIn(\"{{$randomPassword}}\");\r",
									"pm.collectionVariables.set(\"userPassword\", userPassword);\r",
									"\r",
									"var phoneNumber = pm.variables.replaceIn(\"{{$randomInt}}\");\r",
									"pm.collectionVariables.set(\"phoneNumber\", phoneNumber);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"{{userID}}\",\r\n    \"username\": \"{{userName}}\",\r\n    \"firstName\": \"{{userName}}\",\r\n    \"lastName\": \"{{userLastName}}\",\r\n    \"email\": \"{{userEmail}}\",\r\n    \"password\": \"{{userPassword}}\",\r\n    \"phone\": \"{{phoneNumber}}\",\r\n    \"userStatus\": 0\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "2. Get user by name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonObject = JSON.parse(responseBody);\r",
									"\r",
									"var userID = pm.collectionVariables.get(\"userID\");\r",
									"var userName = pm.collectionVariables.get(\"userName\");\r",
									"var userLastName = pm.collectionVariables.get(\"userLastName\");\r",
									"var userEmail = pm.collectionVariables.get(\"userEmail\");\r",
									"\r",
									"tests[\"userID = \" + userID] = jsonObject.id == userID;\r",
									"tests[\"User name = \" + userName] = jsonObject.username === userName;\r",
									"tests[\"User Last Name = \"+userLastName ] = jsonObject.lastName === userLastName;\r",
									"tests[\"User email = \"+userEmail ] = jsonObject.email === userEmail;\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/{{userName}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"{{userName}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "3. Update user name",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var userID = pm.collectionVariables.get(\"userID\");\r",
									"var userName = pm.collectionVariables.get(\"userName\");\r",
									"var userLastName = pm.collectionVariables.get(\"userLastName\");\r",
									"var userEmail = pm.collectionVariables.get(\"userEmail\");\r",
									"var userPassword = pm.collectionVariables.get(\"userPassword\");\r",
									"var phoneNumber = pm.collectionVariables.get(\"phoneNumber\");\r",
									"\r",
									"var newUserName = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
									"pm.collectionVariables.set(\"newUserName\", newUserName);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"{{userID}}\",\r\n    \"username\": \"{{newUserName}}\",\r\n    \"firstName\": \"{{userName}}\",\r\n    \"lastName\": \"{{userLastName}}\",\r\n    \"email\": \"{{userEmail}}\",\r\n    \"password\": \"{{userPassword}}\",\r\n    \"phone\": \"{{phoneNumber}}\",\r\n    \"userStatus\": 0\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/user/{{userName}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"{{userName}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "4. Get user updated",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonObject = JSON.parse(responseBody);\r",
									"\r",
									"var userID = pm.collectionVariables.get(\"userID\");\r",
									"var newUserName = pm.collectionVariables.get(\"newUserName\");\r",
									"var userLastName = pm.collectionVariables.get(\"userLastName\");\r",
									"var userEmail = pm.collectionVariables.get(\"userEmail\");\r",
									"\r",
									"tests[\"userID = \" + userID] = jsonObject.id == userID;\r",
									"tests[\"User name updated = \" + newUserName] = jsonObject.username === newUserName;\r",
									"tests[\"User Last Name = \"+userLastName ] = jsonObject.lastName === userLastName;\r",
									"tests[\"User email = \"+userEmail ] = jsonObject.email === userEmail;\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/{{newUserName}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"{{newUserName}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "5. Login user in the system",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Message = logged in user session\",() => {\r",
									"  pm.expect(pm.response.text()).to.include(\"logged in user session\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/login?username={{userName}}&password={{userPassword}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"login"
							],
							"query": [
								{
									"key": "username",
									"value": "{{userName}}"
								},
								{
									"key": "password",
									"value": "{{userPassword}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "6. Logout user in the system",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "7. Delete user",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var newUserName = pm.collectionVariables.get(\"newUserName\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/{{newUserName}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"{{newUserName}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "8. Create multiple users",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var userID = pm.variables.replaceIn(\"{{$randomInt}}\");\r",
									"pm.collectionVariables.set(\"userID\", userID);\r",
									"\r",
									"var userName = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
									"pm.collectionVariables.set(\"userName\", userName);\r",
									"\r",
									"var userLastName = pm.variables.replaceIn(\"{{$randomLastName}}\");\r",
									"pm.collectionVariables.set(\"userLastName\", userLastName);\r",
									"\r",
									"var userEmail = pm.variables.replaceIn(\"{{$randomEmail}}\");\r",
									"pm.collectionVariables.set(\"userEmail\", userEmail);\r",
									"\r",
									"var userPassword = pm.variables.replaceIn(\"{{$randomPassword}}\");\r",
									"pm.collectionVariables.set(\"userPassword\", userPassword);\r",
									"\r",
									"var phoneNumber = pm.variables.replaceIn(\"{{$randomInt}}\");\r",
									"pm.collectionVariables.set(\"phoneNumber\", phoneNumber);\r",
									"\r",
									"/*Second user*/\r",
									"\r",
									"var secondUserID = pm.variables.replaceIn(\"{{$randomInt}}\");\r",
									"pm.collectionVariables.set(\"secondUserID\", secondUserID);\r",
									"\r",
									"var secondUserName = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
									"pm.collectionVariables.set(\"secondUserName\", secondUserName);\r",
									"\r",
									"var secondLastName = pm.variables.replaceIn(\"{{$randomLastName}}\");\r",
									"pm.collectionVariables.set(\"secondLastName\", secondLastName);\r",
									"\r",
									"var secondEmail = pm.variables.replaceIn(\"{{$randomEmail}}\");\r",
									"pm.collectionVariables.set(\"secondEmail\", secondEmail);\r",
									"\r",
									"var secondPassword = pm.variables.replaceIn(\"{{$randomPassword}}\");\r",
									"pm.collectionVariables.set(\"secondPassword\", secondPassword);\r",
									"\r",
									"var secondNumber = pm.variables.replaceIn(\"{{$randomInt}}\");\r",
									"pm.collectionVariables.set(\"secondNumber\", secondNumber);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Message = ok\",() => {\r",
									"  pm.expect(pm.response.text()).to.include(\"ok\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n    \"id\": \"{{userID}}\",\r\n    \"username\": \"{{userName}}\",\r\n    \"firstName\": \"{{userName}}\",\r\n    \"lastName\": \"{{userLastName}}\",\r\n    \"email\": \"{{userEmail}}\",\r\n    \"password\": \"{{userPassword}}\",\r\n    \"phone\": \"{{phoneNumber}}\",\r\n    \"userStatus\": 0\r\n},\r\n{\r\n    \"id\": \"{{secondUserID}}\",\r\n    \"username\": \"{{secondUserName}}\",\r\n    \"firstName\": \"{{secondUserName}}\",\r\n    \"lastName\": \"{{secondLastName}}\",\r\n    \"email\": \"{{secondEmail}}\",\r\n    \"password\": \"{{secondPassword}}\",\r\n    \"phone\": \"{{secondNumber}}\",\r\n    \"userStatus\": 0\r\n}\r\n]"
						},
						"url": {
							"raw": "{{baseUrl}}/user/createWithArray",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"createWithArray"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Validations",
			"item": [
				{
					"name": "1. Invalid id for add a new pet",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var petID = pm.variables.replaceIn(\"{{$randomInt}}\");\r",
									"pm.collectionVariables.set(\"petID\", petID);\r",
									"\r",
									"var petName = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
									"pm.collectionVariables.set(\"petName\", petName);\r",
									"\r",
									"pm.collectionVariables.set(\"petCategory\", \"Labrador\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Message = bad input\",() => {\r",
									"  pm.expect(pm.response.text()).to.include(\"bad input\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\":wrongInput,\r\n  \"category\": {\r\n    \"id\": 0,\r\n    \"name\": \"{{petCategory}}\"\r\n  },\r\n  \"name\": \"{{petName}}\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": \"{{petID}}\",\r\n      \"name\": \"Cute-lab\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/pet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "petID",
			"value": ""
		},
		{
			"key": "petName",
			"value": ""
		},
		{
			"key": "petCategory",
			"value": ""
		},
		{
			"key": "petNewName",
			"value": ""
		},
		{
			"key": "secpetNewName",
			"value": ""
		},
		{
			"key": "unknownpetNewName",
			"value": ""
		},
		{
			"key": "shipDateInFuture",
			"value": ""
		},
		{
			"key": "quantityNumber",
			"value": ""
		},
		{
			"key": "orderID",
			"value": ""
		},
		{
			"key": "userID",
			"value": ""
		},
		{
			"key": "userName",
			"value": ""
		},
		{
			"key": "userLastName",
			"value": ""
		},
		{
			"key": "userEmail",
			"value": ""
		},
		{
			"key": "userPassword",
			"value": ""
		},
		{
			"key": "phoneNumber",
			"value": ""
		},
		{
			"key": "newUserName",
			"value": ""
		},
		{
			"key": "currenAvailableOrders",
			"value": ""
		},
		{
			"key": "secondUserID",
			"value": ""
		},
		{
			"key": "secondUserName",
			"value": ""
		},
		{
			"key": "secondLastName",
			"value": ""
		},
		{
			"key": "secondEmail",
			"value": ""
		},
		{
			"key": "secondPassword",
			"value": ""
		},
		{
			"key": "secondNumber",
			"value": ""
		}
	]
}